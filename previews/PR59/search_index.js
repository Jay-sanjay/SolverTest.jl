var documenterSearchIndex = {"docs":
[{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [SolverTest]","category":"page"},{"location":"reference/#SolverTest.bound_constrained_nlp-Tuple{Any}","page":"Reference","title":"SolverTest.bound_constrained_nlp","text":"bound_constrained_nlp(solver; problem_set = bound_constrained_nlp_set(), atol = 1e-6, rtol = 1e-6)\n\nTest the solver on bound-constrained problems. If rtol is non-zero, the relative error uses the gradient at the initial guess.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SolverTest.bound_constrained_nls-Tuple{Any}","page":"Reference","title":"SolverTest.bound_constrained_nls","text":"bound_constrained_nls(solver; problem_set = bound_constrained_nls_set(), atol = 1e-6, rtol = 1e-6)\n\nTest the solver on bound-constrained nonlinear least-squares problems. If rtol is non-zero, the relative error uses the gradient at the initial guess.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SolverTest.equality_constrained_nlp-Tuple{Any}","page":"Reference","title":"SolverTest.equality_constrained_nlp","text":"equality_constrained_nlp(solver; problem_set = equality_constrained_nlp_set(), atol = 1e-6, rtol = 1e-6)\n\nTest the solver on equality-constrained problems. If rtol is non-zero, the relative error uses the gradient at the initial guess.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SolverTest.equality_constrained_nls-Tuple{Any}","page":"Reference","title":"SolverTest.equality_constrained_nls","text":"equality_constrained_nls(solver; problem_set = equality_constrained_nls_set(), atol = 1e-6, rtol = 1e-6)\n\nTest the solver on equality-constrained problems. If rtol is non-zero, the relative error uses the gradient at the initial guess.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SolverTest.kkt_checker-Union{Tuple{S}, Tuple{T}, Tuple{NLPModels.AbstractNLPModel{T, S}, Any}} where {T, S}","page":"Reference","title":"SolverTest.kkt_checker","text":"kkt_checker(nlp, sol; kwargs...)\n\nGiven an NLPModels nlp and a vector sol, it returns the KKT residual of an optimization problem as a tuple (primal, dual). In particular, it uses ripqp to solve the following quadratic optimization problem with linear constraints\n\nmin_{d} ∇f(sol)ᵀd +  ½∥d∥²\n        lvar ≤ sol + d ≤ uvar\n        lcon ≤ c(sol) + ∇c(sol)d ≤ ucon\n\nThe solution of this problem is the gradient of the Lagrangian of the nlp at sol thanks to the ½ ‖d‖² term in the objective.\n\nKeyword arguments are passed to RipQP.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SolverTest.multiprecision_nlp-Tuple{Any, Any}","page":"Reference","title":"SolverTest.multiprecision_nlp","text":"multiprecision_nlp(solver, problem_type; precisions=[Float16, …, BigFloat])\n\nTest that solver solves a problem of type problem_type on various precisions. The problem_type can be\n\n:unc\n:bnd\n:equ\n:ineq\n:eqnbnd\n:gen\n\n\n\n\n\n","category":"method"},{"location":"reference/#SolverTest.multiprecision_nls-Tuple{Any, Any}","page":"Reference","title":"SolverTest.multiprecision_nls","text":"multiprecision_nls(solver, problem_type; precisions=[Float16, …, BigFloat])\n\nTest that solver solves a problem of type problem_type on various precisions. The problem_type can be\n\n:unc\n:bnd\n:equ\n:ineq\n:eqnbnd\n:gen\n\n\n\n\n\n","category":"method"},{"location":"reference/#SolverTest.unconstrained_nlp-Tuple{Any}","page":"Reference","title":"SolverTest.unconstrained_nlp","text":"unconstrained_nlp(solver; problem_set = unconstrained_nlp_set(), atol = 1e-6, rtol = 1e-6)\n\nTest the solver on unconstrained problems. If rtol is non-zero, the relative error uses the gradient at the initial guess.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SolverTest.unconstrained_nls-Tuple{Any}","page":"Reference","title":"SolverTest.unconstrained_nls","text":"unconstrained_nls(solver; problem_set = unconstrained_nls_set(), atol = 1e-6, rtol = 1e-6)\n\nTest the solver on unconstrained nonlinear least-squares problems. If rtol is non-zero, the relative error uses the gradient at the initial guess.\n\n\n\n\n\n","category":"method"},{"location":"#SolverTest","page":"Home","title":"SolverTest","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"SolverTest package provides testing facilities for developers of JSO-compliant solvers.","category":"page"},{"location":"#How-to-cite","page":"Home","title":"How to cite","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Please cite this repository if you use SolverTest.jl in your work: see CITATION.bib.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<p> SolverTest is a &nbsp;     <a href=\"https://julialang.org\">         <img src=\"https://raw.githubusercontent.com/JuliaLang/julia-logo-graphics/master/images/julia.ico\" width=\"16em\">         Julia Language     </a>     &nbsp; package. To install SolverTest,     please <a href=\"https://docs.julialang.org/en/v1/manual/getting-started/\">open     Julia's interactive session (known as REPL)</a> and press <kbd>]</kbd> key in the REPL to use the package mode, then type the following command </p>","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add SolverTest","category":"page"},{"location":"#Bug-reports-and-discussions","page":"Home","title":"Bug reports and discussions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you think you found a bug, feel free to open an issue. Focused suggestions and requests can also be opened as issues. Before opening a pull request, start an issue or a discussion on the topic, please.","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you want to ask a question not suited for a bug report, feel free to start a discussion here. This forum is for general discussion about this repository and the JuliaSmoothOptimizers, so questions about any of our packages are welcome.","category":"page"},{"location":"tutorial/#Tutorial","page":"Tutorial","title":"Tutorial","text":"","category":"section"}]
}
